# Generated by Django 3.0.7 on 2020-07-03 20:44

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cycle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('totalTime', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('code', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(default='', max_length=255)),
                ('state', models.CharField(choices=[(1, 'To Do'), (2, 'In Progress'), (3, 'Done')], default='To Do', max_length=15)),
            ],
            managers=[
                ('tasks', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='RestCycle',
            fields=[
                ('cycle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='chronos.Cycle')),
                ('time', models.FloatField(default=5)),
            ],
            bases=('chronos.cycle',),
        ),
        migrations.CreateModel(
            name='WorkCycle',
            fields=[
                ('cycle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='chronos.Cycle')),
                ('time', models.FloatField(default=25)),
            ],
            bases=('chronos.cycle',),
        ),
        migrations.CreateModel(
            name='TimeRecord',
            fields=[
                ('code', models.AutoField(primary_key=True, serialize=False)),
                ('startTime', models.TimeField()),
                ('endTime', models.TimeField(null=True)),
                ('date', models.DateField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chronos.Task')),
                ('restCycle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='chronos.RestCycle')),
                ('workCycle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='chronos.WorkCycle')),
            ],
            managers=[
                ('records', django.db.models.manager.Manager()),
            ],
        ),
    ]
